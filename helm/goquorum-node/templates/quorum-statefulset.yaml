{{- if .Values.node.quorum.serviceAccount.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "goquorum-node.quorumServiceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- end }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "goquorum-node.fullname" . }}-quorum-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "goquorum-node.fullname" . }}-quorum-rb
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "goquorum-node.fullname" . }}-quorum-role
subjects:
- kind: ServiceAccount
  name: {{ include "goquorum-node.quorumServiceAccountName" . }}
  namespace:  {{ .Release.Namespace }}

{{- if .Values.node.quorum.storageClass.create }}
{{- if eq .Values.provider "azure" }}

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ include "goquorum-node.quorumStorageClassName" . }}
  namespace: {{ .Release.Namespace }}
provisioner: kubernetes.io/azure-file
mountOptions:
  - dir_mode=0755
  - file_mode=0755
  - uid=0
  - gid=0
  - mfsymlinks
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
parameters:
  skuName: Standard_LRS

{{- else if eq .Values.provider "aws" }}

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ include "goquorum-node.quorumStorageClassName" . }}
  namespace: {{ .Release.Namespace }}
provisioner: kubernetes.io/aws-ebs
reclaimPolicy: Retain
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
parameters:
  type: gp2
  fsType: ext4

{{- else if eq .Values.provider "gcp" }}

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ include "goquorum-node.quorumStorageClassName" . }}
  namespace: {{ .Release.Namespace }}
provisioner: kubernetes.io/gce-pd
reclaimPolicy: Retain
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
parameters:
  type: pd-ssd
  fstype: ext4
  replication-type: none

{{- else }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: quorum-pv
  namespace: {{ .Release.Namespace }}
  labels:
    type: local
spec:
  storageClassName: {{ include "goquorum-node.quorumStorageClassName" . }}
  capacity:
    storage: {{ .Values.node.quorum.storage.sizeLimit | quote }}
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/{{ include "goquorum-node.fullname" . }}"

{{- end }}
{{- end }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: quorum
  labels:
    app: quorum
    chart: {{ template "goquorum-node.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    namespace: {{ .Release.Namespace }}
    component: {{ .Release.Name }}
    app.kubernetes.io/name: {{ include "goquorum-node.fullname" . }}
    helm.sh/chart: {{ include "goquorum-node.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.node.quorum.replicaCount }}
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: quorum
      release: {{ .Release.Name }}
      component: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "goquorum-node.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: quorum
  volumeClaimTemplates:
  - metadata:
      name: quorum-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.node.quorum.storageClass.create }}
      storageClassName: {{ include "goquorum-node.quorumStorageClassName" . }}
      {{- else if and .Values.node.quorum.storageClass.name (not .Values.node.quorum.storageClass.create) }}
      storageClassName: {{ include "goquorum-node.quorumStorageClassName" . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.node.quorum.storage.pvcSizeLimit | quote }}
  template:
    metadata:
      labels:
        app: quorum
        release: {{ .Release.Name }}
        component: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "goquorum-node.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.node.quorum.metrics.pprofport | quote}}
        prometheus.io/path: "/debug/metrics/prometheus"        
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - quorum
            topologyKey: "topology.kubernetes.io/zone"
      serviceAccountName: {{ include "goquorum-node.quorumServiceAccountName" . }}
      initContainers:
      - name: init
        image: "{{ .Values.node.quorum.image.repository }}:{{ .Values.node.quorum.image.tag }}"
        command: [ "sh" ]
        args:
        - "-cx"
        - "if [ ! -f $QUORUM_DATA_DIR/genesis_created ]; then
              /usr/local/bin/geth --datadir $QUORUM_DATA_DIR init /etc/quorum/genesis/genesis-geth.json;
              date > $QUORUM_DATA_DIR/genesis_created;
           fi;
           cp -r /etc/quorum/qdata/contracts-tmp /etc/quorum/qdata/contracts;
           chmod 755  /etc/quorum/qdata/contracts/runscript.sh;
           until $(wget --quiet --tries=1 --spider http://{{ .Values.node.tessera.loadBalancerIP.int }}:{{ .Values.node.tessera.q2tport }}/upcheck); do echo 'waiting for transaction manager to start...'; sleep 10; done;
           echo transaction manager is up;
          "
        # ENV  
        env:
          - name: QUORUM_DATA_DIR
            value: {{ .Values.global.dataPath }}/dd
          - name: QHOME
            value: {{ .Values.global.dataPath }}
        volumeMounts:
        - name: quorum-pvc
          mountPath: {{ .Values.global.dataPath }}
          subPath: quorum-node
        - name: genesis-file
          mountPath: /etc/quorum/genesis/genesis-geth.json
          subPath: genesis-geth.json
        - name: contracts-config
          mountPath: {{ .Values.global.dataPath }}/contracts-tmp
          readOnly: false
      containers:
      - name: quorum
        image: "{{ .Values.node.quorum.image.repository }}:{{ .Values.node.quorum.image.tag }}"
        resources:
          requests:
            memory: {{ .Values.node.quorum.resources.memRequest }} 
            cpu: {{ .Values.node.quorum.resources.cpuRequest }} 
          limits:
            memory: {{ .Values.node.quorum.resources.memLimit }} 
            cpu: {{ .Values.node.quorum.resources.cpuLimit }} 
        readinessProbe:
          exec:
            command:
              - ls
              - $(QHOME)/dd/geth.ipc
          initialDelaySeconds: 20
          periodSeconds: 3
        lifecycle:
          preStop:
            exec:
              command: [ "/bin/sleep", "20" ]
        command: [ "sh" ]
        args:
        - "-cx"
        - "
           apk add curl;
           apk add jq;
           ln -s $QHOME/permission-nodes/permissioned-nodes.json $QUORUM_DATA_DIR/permissioned-nodes.json;
           ln -s $QHOME/permission-nodes/permissioned-nodes.json $QUORUM_DATA_DIR/static-nodes.json;
           ORDINAL=${HOSTNAME##*-};
           rm -f $QUORUM_DATA_DIR/geth/nodekey;
           rm -f $QUORUM_DATA_DIR/geth/enode;
           ln -s $QUORUM_DATA_DIR/geth/nodekey$ORDINAL $QUORUM_DATA_DIR/geth/nodekey;
           ln -s $QUORUM_DATA_DIR/geth/enode$ORDINAL $QUORUM_DATA_DIR/geth/enode;
           export THIS_ENODE=$(cat $QUORUM_DATA_DIR/geth/enode);
           rm -r /etc/quorum/qdata/contracts-tmp;
           cat /etc/quorum/genesis/genesis-geth.json;
           {{- if not .Values.node.quorum.qmKeyhashicorpVault.enabled }}
           chmod 644 $QUORUM_DATA_DIR/keystore/key;
           {{- end }}
           chmod 644 $QUORUM_DATA_DIR/keystore;
           {{- if .Values.node.quorum.qmKeyhashicorpVault.enabled }}
           rm $QUORUM_DATA_DIR/keystore/key;
           chmod 644 $QUORUM_VAULT_DIR;
           {{- end }}
           {{- if eq .Values.node.flags.privacy true }} 
           until $(wget --quiet --tries=1 --spider http://{{ .Values.node.tessera.loadBalancerIP.int }}:{{ .Values.node.tessera.q2tport }}/upcheck); do echo 'waiting for transaction manager to start...'; sleep 10; done;
           echo transaction manager is up;
           {{- end }}
          
           {{- if not .Values.node.quorum.qmKeyhashicorpVault.enabled }}
           touch $QUORUM_DATA_DIR/password.txt;   
           {{- end }}
           
           /usr/local/bin/geth \
           --datadir $QUORUM_DATA_DIR \
           --gcmode {{ .Values.node.quorum.ethereum.gcmode }} \
           --syncmode {{ .Values.node.quorum.ethereum.syncmode }} \
           --http.vhosts=\"{{ .Values.node.quorum.rpc.vHosts }}\" \
           --http.corsdomain=\"{{ .Values.node.quorum.rpc.corsdomain }}\" \
           --permissioned \
           --nodiscover \
           --nat=none \
           --verbosity {{ .Values.node.quorum.log.verbosity }} \
           --networkid {{ .Values.node.quorum.networkId }} \
           {{- if not .Values.node.quorum.qmKeyhashicorpVault.enabled }}
           --unlock {{ .Values.node.quorum.account.unlock }} \
           --allow-insecure-unlock \
           {{- end }}
           {{- if eq .Values.node.quorum.log.emitcheckpoints true }}
           --emitcheckpoints \
           {{- end }}
           {{- if or .Values.node.quorum.qmKeyhashicorpVault.enabled .Values.node.quorum.securityPlugin.enabled }}
           --plugins file:///$QUORUM_PLUGIN_DIR/plugin.json \
           --plugins.skipverify \
           {{- end }}
           {{- if eq .Values.node.quorum.rpc.enabled true }}
           --http \
           --http.addr {{ .Values.node.quorum.rpc.addr }} \
           --http.port {{ .Values.node.quorum.rpc.port }} \
           --http.api {{ .Values.node.quorum.rpc.api }} \
           --rpc.gascap {{ .Values.node.quorum.rpc.gascap }} \
           {{- end }}
           {{- if eq .Values.node.quorum.ws.enabled true }}
           --ws \
           --ws.api {{ .Values.node.quorum.ws.api }}  \
           --ws.addr {{ .Values.node.quorum.ws.addr }}  \
           --ws.port {{ .Values.node.quorum.ws.port }} \
           --ws.origins \"{{ .Values.node.quorum.ws.origins }}\" \
           {{- end }}
           --port {{ .Values.node.quorum.p2p.port }} \
           --maxpeers {{ .Values.node.quorum.maxpeers}}  \
           --cache {{ .Values.node.quorum.cache.value }} \ 
           --cache.database {{ .Values.node.quorum.cache.database }} \
           {{- if eq .Values.node.quorum.privatetriecache.enable true }}
           --privatetriecache.enable \
           {{- end }}
           --istanbul.blockperiod {{ .Values.node.quorum.miner.blockPeriod }} \
           {{- if eq .Values.node.flags.isValidatorNode true }}
           --mine \
           --miner.threads {{ .Values.node.quorum.miner.threads }}  \
           --miner.gastarget {{ .Values.node.quorum.miner.gastarget }} \
           --miner.gaslimit {{ .Values.node.quorum.miner.gaslimit }} \
           {{- end }}
           --txpool.accountslots {{ .Values.node.quorum.txpool.accountslots }} \
           --txpool.accountqueue {{ .Values.node.quorum.txpool.accountqueue }} \
           --txpool.globalslots {{ .Values.node.quorum.txpool.globalslots }} \
           --txpool.globalqueue {{ .Values.node.quorum.txpool.globalqueue }} \
           {{- if eq .Values.node.flags.privacy true }} 
           --ptm.url http://{{ .Values.node.tessera.loadBalancerIP.int }}:{{ .Values.node.tessera.q2tport }} \
           --ptm.timeout {{ .Values.node.quorum.ptm.timeout }} \
           --ptm.dialtimeout {{ .Values.node.quorum.ptm.dialtimeout }} \
           --ptm.http.writebuffersize {{ .Values.node.quorum.ptm.http.writebuffersize }} \ 
           --ptm.http.readbuffersize {{ .Values.node.quorum.ptm.http.readbuffersize }} \
           {{- end }}
           {{- if eq .Values.node.quorum.metrics.enabled true }}
           --metrics \
           --pprof \
           --pprof.addr {{ .Values.node.quorum.metrics.pprofaddr }} \
           --pprof.port {{ .Values.node.quorum.metrics.pprofport }} \
           --pprof.memprofilerate {{ .Values.node.quorum.metrics.memprofilerate }} \
           --pprof.blockprofilerate {{ .Values.node.quorum.metrics.blockprofilerate }} \
           {{- end }}
           --password $QUORUM_DATA_DIR/password.txt 2>&1 | tee -a /etc/quorum/qdata/logs/quorum.log;"
 
        ports:
          - name: json-rpc
            containerPort: {{ .Values.node.quorum.rpc.port }}
            protocol: TCP
          - name: ws
            containerPort: {{ .Values.node.quorum.ws.port }}
            protocol: TCP
          - name: graphql
            containerPort: {{ .Values.node.quorum.graphql.port }}
            protocol: TCP
          - name: p2p
            containerPort: {{ .Values.node.quorum.p2p.port }}
            protocol: TCP
          - name: discovery
            containerPort: {{ .Values.node.quorum.p2p.port }}
            protocol: UDP
          - name: pprof
            containerPort: {{ .Values.node.quorum.metrics.pprofport }}
            protocol: TCP

        # ENV
        env:
        - name: QUORUM_DATA_DIR
          value: {{ .Values.global.dataPath }}/dd
        - name: QHOME
          value: {{ .Values.global.dataPath }}
        - name: TM_HOME
          value: {{ .Values.global.dataPath }}/tm/
        - name: THIS_NODE_ID
          value: quorum-node
        - name: PRIVACY_ENHANCEMENTS
          value: {{ .Values.node.flags.privacyEnhancement | quote }}
        {{- if eq .Values.node.flags.privacy false }} 
        - name: PRIVATE_CONFIG
          value: "ignore"
        {{- end }}
        - name: QUORUM_PLUGIN_DIR
          value: {{ .Values.global.pluginPath }}
        {{- if .Values.node.quorum.qmKeyhashicorpVault.enabled }}
        - name: QUORUM_VAULT_DIR
          value: {{ .Values.global.vaultPath }}
        - name: HASHICORP_ROLE_ID
          value: {{ .Values.node.quorum.qmKeyhashicorpVault.appRoleRoleId }}
        - name: HASHICORP_SECRET_ID
          value: {{ .Values.node.quorum.qmKeyhashicorpVault.appRoleSecretId }}
        {{- end }}
        {{- if .Values.node.quorum.securityPlugin.enabled }}
        - name: TLS_CERT_FILE
          value: {{ include "goquorum-node.tlscrt" . }}
        - name: TLS_KEY_FILE
          value: {{ include "goquorum-node.tlskey" . }}
        {{- end }}
        volumeMounts:
        - name: quorum-pvc
          mountPath: {{ .Values.global.dataPath }}
          subPath: quorum-node
        - name: quorum-pvc
          mountPath: {{ .Values.global.dataPath }}/tm
          subPath: quorum-node-tm
        - name: quorum-pvc
          mountPath: {{ .Values.global.dataPath }}/logs
          subPath: quorum-node-logs
        - name: genesis-file
          mountPath: /etc/quorum/genesis/genesis-geth.json
          subPath: genesis-geth.json
        - name: quorum-nodekey-pod0
          mountPath: {{ .Values.global.dataPath }}/dd/geth/nodekey0
          subPath: nodekey0
        - name: quorum-nodekey-pod1
          mountPath: {{ .Values.global.dataPath }}/dd/geth/nodekey1
          subPath: nodekey1
        - name: quorum-nodekey-pod2
          mountPath: {{ .Values.global.dataPath }}/dd/geth/nodekey2
          subPath: nodekey2
        - name: quorum-enode-pod0
          mountPath: {{ .Values.global.dataPath }}/dd/geth/enode0
          subPath: enode0
        - name: quorum-enode-pod1
          mountPath: {{ .Values.global.dataPath }}/dd/geth/enode1
          subPath: enode1
        - name: quorum-enode-pod2
          mountPath: {{ .Values.global.dataPath }}/dd/geth/enode2
          subPath: enode2
        - name: quorum-permissioned-config
          mountPath: {{ .Values.global.dataPath }}/permission-nodes
        - name: geth-helpers
          mountPath: /geth-helpers
        - name: istanbul-validator-config
          mountPath: {{ .Values.global.dataPath }}/istanbul-validator-config.toml
        - name: node-management
          mountPath: {{ .Values.global.dataPath }}/node-management/ibft_propose.sh
          subPath: ibft_propose.sh
        - name: node-management
          mountPath: {{ .Values.global.dataPath }}/node-management/ibft_propose_all.sh
          subPath: ibft_propose_all.sh
      {{- if or .Values.node.quorum.qmKeyhashicorpVault.enabled .Values.node.quorum.securityPlugin.enabled }}
        - name: quorum-plugin-config
          mountPath: {{ .Values.global.pluginPath }}/plugin.json
          subPath: plugin.json
      {{- end }}
      {{- if .Values.node.quorum.qmKeyhashicorpVault.enabled }}
        - name: quorum-vault-config
          mountPath: {{ .Values.global.pluginPath }}/vault-plugin.json
          subPath: vault-plugin.json
        - name: quorum-vault-config
          mountPath: {{ .Values.global.vaultPath }}/keystore/accounts.txt
          subPath: accounts.txt
      {{- end }}
      {{- if not .Values.node.quorum.qmKeyhashicorpVault.enabled }}
        - name: quorum-account-key-file
          mountPath: {{ .Values.global.dataPath }}/dd/keystore/key
          subPath: key
      {{- end }}
      {{- if .Values.node.quorum.securityPlugin.enabled }}
        - name: quorum-security
          mountPath: {{ .Values.global.pluginPath }}/security-plugin.json
          subPath: security-plugin.json
        - name: quorum-tls
          mountPath: {{ include "goquorum-node.tlscrt" . }}
          subPath: cert.pem
        - name: quorum-tls
          mountPath: {{ include "goquorum-node.tlskey" . }}
          subPath: key.pem
      {{- end }}
      volumes:
      - name: quorum-permissioned-config
        configMap:
          name: quorum-permissioned
          items:
          - key: permissioned-nodes.json
            path: permissioned-nodes.json
      - name: genesis-file
        configMap:
          name: genesis
          items:
          - key: genesis-geth.json
            path: genesis-geth.json
      - name: contracts-config
        configMap:
          name: contracts
      {{- if not .Values.node.quorum.qmKeyhashicorpVault.enabled }}
      - name: quorum-account-key-file
        configMap:
          name: quorum-account-key
          items:
          - key: key
            path: key
      {{- end }}
      - name: quorum-nodekey-pod0
        configMap:
          name: quorum-pod0-nodekey
          items:
          - key: nodekey0
            path: nodekey0
      - name: quorum-nodekey-pod1
        configMap:
          name: quorum-pod1-nodekey
          items:
          - key: nodekey1
            path: nodekey1
      - name: quorum-nodekey-pod2
        configMap:
          name: quorum-pod2-nodekey
          items:
          - key: nodekey2
            path: nodekey2
      - name: quorum-enode-pod0
        configMap:
          name: quorum-pod0-enode
          items:
          - key: enode0
            path: enode0
      - name: quorum-enode-pod1
        configMap:
          name: quorum-pod1-enode
          items:
          - key: enode1
            path: enode1
      - name: quorum-enode-pod2
        configMap:
          name: quorum-pod2-enode
          items:
          - key: enode2
            path: enode2
      - name: geth-helpers
        configMap:
          name: geth-helpers
          items:
            - key: geth-attach.sh
              path: geth-attach.sh
            - key: geth-exec.sh
              path: geth-exec.sh
          defaultMode: 0777
      - name: istanbul-validator-config
        configMap:
          name: istanbul-validator-config.toml
      - name: node-management
        configMap:
           name: node-management
           items:
           - key: ibft_propose.sh
             path: ibft_propose.sh
           - key: ibft_propose_all.sh
             path: ibft_propose_all.sh
      {{- if or .Values.node.quorum.qmKeyhashicorpVault.enabled .Values.node.quorum.securityPlugin.enabled }}
      - name: quorum-plugin-config
        configMap:
          name: quorum-plugin
          items:
          - key: plugin.json
            path: plugin.json
      {{- end }}
      {{- if .Values.node.quorum.qmKeyhashicorpVault.enabled }}
      - name: quorum-vault-config
        configMap:
          name: quorum-vault
          items:
          - key: vault-plugin.json
            path: vault-plugin.json
          - key: accounts.txt
            path: accounts.txt
      {{- end }}
      {{- if .Values.node.quorum.securityPlugin.enabled }}
      - name: quorum-security
        configMap:
          name: quorum-security
          items:
          - key: security-plugin.json
            path: security-plugin.json
      - name: quorum-tls
        secret:
          secretName: quorum-tls
          items:
          - key: cert.pem
            path: cert.pem
          - key: key.pem
            path: key.pem
      {{- end }}
---