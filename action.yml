name: 'Partior SMC Packaging'
description: 'Package artifact with auto versioning for Smart Contract'
inputs:
  artifactory-username:  
    description: 'Username for artifactory'
    required: true
    default: 'NIL'
  artifactory-password:  
    description: 'Password for artifactory'
    required: true
    default: 'NIL'
  artifactory-base-url:  
    description: 'Artifactory base URL'
    required: false
    default: 'https://partior.jfrog.io/artifactory'
  branch-name:  
    description: 'Branch name'
    required: true
    default: 'feature'
  rules-importer-files:
    description: 'File generated from partior-libs/gcs-yaml-importer. Support comma delimited for multiple'
    required: true
    default: 'NIL'
  debug:
    description: 'Debug mode for more logging'
    required: false
    default: 'true'
  artifact-type:  
    description: 'Artifact definition type'
    required: false
    default: 'tgz'
outputs:
  artifact-version-name:
    description: "Final output"
    value: ${{ steps.final-version.outputs.name }}
runs:
  using: "composite"
  steps:

    - name: Import importer files
      id: yaml-config
      run: |
        for i in ${${{ inputs.rules-importer-files }}//,/ }
        do 
          Sourcing $i
          if [[ ! -f "$i" ]]; then
            echo [ERROR] Unable to locate importer file: [$i]
          fi
          source "$i"
        done
      shell: bash

    - name: Convert to normal bash env export format
      run: ${{ github.action_path }}/scripts/inject_config_vars.sh "${{ inputs.rules-importer-file }}"
      shell: bash

    - name: List all config variables
      if: inputs.debug == 'true'
      run: ${{ github.action_path }}/scripts/list_config_variables.sh ${{ github.action_path }}/config/general.ini
      shell: bash

    - run: |
       ${{ github.action_path }}/scripts/get_latest_version.sh "${{ inputs.artifactory-base-url }}" \
          "${{ steps.yaml-config.outputs.artifact_packager_artifactory-dev-repo }}" \
          "${{ steps.yaml-config.outputs.artifact_packager_artifactory-release-repo }}" \
          "${{ steps.yaml-config.outputs.artifact_packager_group }}" \
          "${{ steps.yaml-config.outputs.artifact-base-name }}" \
          "${{ inputs.artifact-type }}" \
          "${{ inputs.branch-name }}" \
          "${{ inputs.artifactory-username }}" \
          "${{ inputs.artifactory-password }}"
      shell: bash

    - run: |
        ${{ github.action_path }}/scripts/generate_package_version.sh "${{ inputs.artifactory-target-artifact-name }}" \
          "${{ inputs.branch-name }}" \
          "${{ inputs.short-hash }}"
      shell: bash
    # - id: final-version
    #   run: echo "::set-output name=name::$(echo $(${{ github.action_path }}/scripts/read_new_version.sh))"
    #   shell: bash
    - run: echo Done versioning
      shell: bash
